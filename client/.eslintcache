[{"C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\index.js":"1","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\App.js":"2","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\helpers\\createTable.js":"3","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\components\\Table\\Table.jsx":"4","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\redux\\store.js":"5","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\components\\Cell\\Cell.jsx":"6","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\helpers\\showCell.js":"7","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\helpers\\flag.js":"8","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\helpers\\countCellsHidden.js":"9"},{"size":339,"mtime":1610343823498,"results":"10","hashOfConfig":"11"},{"size":197,"mtime":1610315618237,"results":"12","hashOfConfig":"11"},{"size":2677,"mtime":1610596684017,"results":"13","hashOfConfig":"11"},{"size":2109,"mtime":1610600008567,"results":"14","hashOfConfig":"11"},{"size":482,"mtime":1610343610676,"results":"15","hashOfConfig":"11"},{"size":571,"mtime":1610599934629,"results":"16","hashOfConfig":"11"},{"size":2132,"mtime":1610571161300,"results":"17","hashOfConfig":"11"},{"size":508,"mtime":1610596693224,"results":"18","hashOfConfig":"11"},{"size":615,"mtime":1610588806855,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1uwrcdl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\index.js",[],["43","44"],"C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\App.js",[],"C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\helpers\\createTable.js",["45","46"],"const createTable =  (row,columns,mines) => {\r\n     //se crea el tablero\r\n    let minesLocation=[]\r\n    let matrix = new Array(row)\r\n         for(let i=0;i<matrix.length;i++){\r\n            matrix[i]=new Array(columns)\r\n        }\r\n    \r\n       for(let i=0;i<matrix.length;i++){\r\n        for(let j=0;j<matrix[i].length;j++){\r\n            matrix[i][j]={\r\n                value:0,\r\n                y:i,\r\n                x:j,\r\n                flag:false,\r\n                show:false,\r\n            }\r\n        }\r\n       }\r\n    // se colocan minas de manera aleatoria por todo el tablero\r\n    while(mines>0){\r\n        let y = Math.floor(Math.random() * row)\r\n        let x = Math.floor(Math.random() * columns)\r\n        if(matrix[x][y].value !== 'x'){\r\n            matrix[x][y].value = 'x'\r\n            mines--\r\n        }\r\n    }\r\n\r\n    //contar minas de celdas vecinas\r\n\r\n    for(let i =0; i<row; i++){\r\n        for(let j=0; j<columns;j++){\r\n            \r\n            //arriba\r\n            if(i>0 && matrix[i-1][j].value==='x'){\r\n                matrix[i][j].value!=='x' && matrix[i][j].value++\r\n            }\r\n            //arriba derecha\r\n            if(i>0 && j<columns-1 && matrix[i-1][j+1].value==='x'){\r\n                matrix[i][j].value!=='x' && matrix[i][j].value++\r\n            }\r\n            //derecha\r\n            if( j<columns-1 && matrix[i][j+1].value==='x'){\r\n                matrix[i][j].value!=='x' && matrix[i][j].value++\r\n            }\r\n            //abajo derecha\r\n            if(i<row-1 && j<columns-1 &&  matrix[i+1][j+1].value==='x'){\r\n                matrix[i][j].value!=='x' && matrix[i][j].value++\r\n            }\r\n            //abajo\r\n            if(i<row-1 && matrix[i+1][j].value==='x'){\r\n                matrix[i][j].value!=='x' && matrix[i][j].value++\r\n            }\r\n            //abajo izquierda\r\n            if(i<row-1 && j>0 && matrix[i+1][j-1].value==='x'){\r\n                matrix[i][j].value!=='x' && matrix[i][j].value++\r\n            }\r\n            //izquierda\r\n            if(j>0 && matrix[i][j-1].value==='x'){\r\n                matrix[i][j].value!=='x' && matrix[i][j].value++\r\n            }\r\n            //arriba izquierda\r\n            if(i>0 && j>0 && matrix[i-1][j-1].value==='x'){\r\n                matrix[i][j].value!=='x' && matrix[i][j].value++\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    \r\n    matrix.map(row=>{\r\n        return(\r\n            row.map(cell=>{\r\n                if(cell.value=='x'){\r\n                    minesLocation.push({x:cell.x,y:cell.y})\r\n                }\r\n            })\r\n        )\r\n    })\r\n\r\n       return {\r\n                matrix,\r\n                minesLocation\r\n            } \r\n    \r\n}\r\n\r\nexport default createTable","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\components\\Table\\Table.jsx",["47","48","49"],"C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\redux\\store.js",[],"C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\components\\Cell\\Cell.jsx",[],"C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\helpers\\showCell.js",["50","51","52"],"const showCell = (game,y,x) =>{\r\n    console.log(reveal(game.matrix,y,x))\r\n    let newTableGame = revealCell(game.matrix,y,x)\r\n\r\n    if(newTableGame.lose){\r\n       let gameLose = lose(newTableGame.matrix,game.minesLocation)\r\n        return JSON.parse(JSON.stringify({lose:true,table:gameLose})) \r\n    }\r\n\r\n    return  JSON.parse(JSON.stringify({lose:false,table:newTableGame}));\r\n}\r\n\r\n\r\nfunction lose(matrix,mines){\r\n    for(let i=0;i<mines.length;i++){\r\n        matrix[mines[i].x][mines[i].y].show=true\r\n    }\r\n\r\n    return matrix\r\n}\r\n\r\nfunction revealCell(matrix,y,x){\r\n    matrix[y][x].show=true\r\n\r\n    if(matrix[y][x].value==='x'){\r\n        return {lose:true,\r\n                matrix:matrix}\r\n    } \r\n    if(matrix[y][x].value!==0){\r\n        matrix[y][x].show=true \r\n        return matrix\r\n    }\r\n    let arr = reveal(matrix,y,x)\r\n    arr.map(data=>{\r\n        if(data.value!==0 && matrix[data.y][data.x].show==false){\r\n            matrix[data.y][data.x].show=true\r\n        }\r\n        if(data.value===0 && matrix[data.y][data.x].show==false){\r\n            matrix[data.y][data.x].show=true\r\n            revealCell(matrix,data.y,data.x)\r\n        }\r\n    })\r\n    return matrix\r\n\r\n}\r\n\r\nfunction reveal(matrix,y,x){\r\n    let row = matrix.length\r\n    let columns = matrix[0].length\r\n    let arr =[]\r\n        //arriba\r\n        if(y>0){\r\n            arr.push(matrix[y-1][x])\r\n        }\r\n        //arriba derecha\r\n        if(y>0 && x<columns-1){\r\n            arr.push(matrix[y-1][x+1])\r\n        }\r\n        //derecha\r\n        if( x<columns-1){\r\n            arr.push(matrix[y][x+1])\r\n        }\r\n        //abajo derecha\r\n        if(y<row-1 && x<columns-1){\r\n            arr.push(matrix[y+1][x+1])\r\n        }\r\n        //abajo\r\n        if(y<row-1){\r\n            arr.push(matrix[y+1][x])\r\n        }\r\n        //abajo izquierda\r\n        if(y<row-1 && x>0){\r\n            arr.push(matrix[y+1][x-1])\r\n        }\r\n        //izquierda\r\n        if(x>0){\r\n            arr.push(matrix[y][x-1])\r\n        }\r\n        //arriba izquierda\r\n        if(y>0 && x>0){\r\n            arr.push(matrix[y-1][x-1])\r\n        }\r\n    return arr\r\n}\r\n\r\n\r\nexport default showCell","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\helpers\\flag.js",["53"],"export const plantFlag = (matrix,x,y) =>{\r\n    if(matrix[x][y].show){\r\n        return matrix\r\n    }\r\n    matrix[x][y].flag= !matrix[x][y].flag\r\n    return matrix\r\n}\r\n\r\n\r\n\r\nexport const getCellFlag = (game)=>{\r\n    let matrix = game.matrix\r\n    let flagArray = []\r\n    matrix.map(row=>{\r\n        return(\r\n            row.map(cell=>{\r\n                if(cell.flag===true){\r\n                    flagArray.push({x:cell.x,y:cell.y})\r\n                }\r\n            })\r\n        )\r\n    })\r\n    return flagArray\r\n}\r\n","C:\\Users\\Lucia\\Desktop\\minesweeper\\client\\src\\helpers\\countCellsHidden.js",["54","55"],"export const countCellsHidden = (game) =>{\r\n    let matrix = game.matrix\r\n    let arr=[];\r\n\r\n    matrix.map(row=>{\r\n        return(\r\n            row.map(cell=>{\r\n                if(cell.show===false){\r\n                    arr.push({x:cell.x,y:cell.y})\r\n                }\r\n            })\r\n        )\r\n    })\r\n    return arr\r\n}\r\nexport const showAll = (game) =>{\r\n    let matrix = game.matrix\r\n    matrix.map(row=>{\r\n        return(\r\n            row.map(cell=>{\r\n                if(cell.value!=='x'){\r\n                    cell.show=true\r\n                }\r\n            })\r\n        )\r\n    })\r\n    return matrix\r\n\r\n}\r\n\r\n",{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":74,"column":25,"nodeType":"62","messageId":"63","endLine":74,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":75,"column":30,"nodeType":"66","messageId":"67","endLine":75,"endColumn":32},{"ruleId":"68","severity":1,"message":"69","line":1,"column":24,"nodeType":"70","messageId":"71","endLine":1,"endColumn":33},{"ruleId":"64","severity":1,"message":"65","line":27,"column":38,"nodeType":"66","messageId":"67","endLine":27,"endColumn":40},{"ruleId":"64","severity":1,"message":"65","line":47,"column":38,"nodeType":"66","messageId":"67","endLine":47,"endColumn":40},{"ruleId":"60","severity":1,"message":"61","line":34,"column":17,"nodeType":"62","messageId":"63","endLine":34,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":35,"column":57,"nodeType":"66","messageId":"67","endLine":35,"endColumn":59},{"ruleId":"64","severity":1,"message":"65","line":38,"column":57,"nodeType":"66","messageId":"67","endLine":38,"endColumn":59},{"ruleId":"60","severity":1,"message":"61","line":16,"column":25,"nodeType":"62","messageId":"63","endLine":16,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":7,"column":25,"nodeType":"62","messageId":"63","endLine":7,"endColumn":27},{"ruleId":"60","severity":1,"message":"61","line":20,"column":25,"nodeType":"62","messageId":"63","endLine":20,"endColumn":27},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]